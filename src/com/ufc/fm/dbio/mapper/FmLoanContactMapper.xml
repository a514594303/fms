<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ufc.fm.dbio.mapper.FmLoanContactMapper" >
  <resultMap id="BaseResultMap" type="com.ufc.fm.dbio.po.FmLoanContact" >
    <id column="contact_id" property="contactId" jdbcType="INTEGER" />
    <result column="loan_id" property="loanId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="relation" property="relation" jdbcType="VARCHAR" />
    <result column="home_addr" property="homeAddr" jdbcType="VARCHAR" />
    <result column="home_post" property="homePost" jdbcType="VARCHAR" />
    <result column="home_phone" property="homePhone" jdbcType="VARCHAR" />
    <result column="company_addr" property="companyAddr" jdbcType="VARCHAR" />
    <result column="company_postcode" property="companyPostcode" jdbcType="VARCHAR" />
    <result column="company_phone" property="companyPhone" jdbcType="VARCHAR" />
    <result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    contact_id, loan_id, name, gender, relation, home_addr, home_post, home_phone, company_addr, 
    company_postcode, company_phone, mobile_phone
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ufc.fm.dbio.po.FmLoanContactExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fm_loan_contact
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fm_loan_contact
    where contact_id = #{contactId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fm_loan_contact
    where contact_id = #{contactId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ufc.fm.dbio.po.FmLoanContactExample" >
    delete from fm_loan_contact
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ufc.fm.dbio.po.FmLoanContact" >
    <selectKey resultType="java.lang.Integer" keyProperty="contactId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fm_loan_contact (loan_id, name, gender, 
      relation, home_addr, home_post, 
      home_phone, company_addr, company_postcode, 
      company_phone, mobile_phone)
    values (#{loanId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{relation,jdbcType=VARCHAR}, #{homeAddr,jdbcType=VARCHAR}, #{homePost,jdbcType=VARCHAR}, 
      #{homePhone,jdbcType=VARCHAR}, #{companyAddr,jdbcType=VARCHAR}, #{companyPostcode,jdbcType=VARCHAR}, 
      #{companyPhone,jdbcType=VARCHAR}, #{mobilePhone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ufc.fm.dbio.po.FmLoanContact" >
    <selectKey resultType="java.lang.Integer" keyProperty="contactId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fm_loan_contact
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loanId != null" >
        loan_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="relation != null" >
        relation,
      </if>
      <if test="homeAddr != null" >
        home_addr,
      </if>
      <if test="homePost != null" >
        home_post,
      </if>
      <if test="homePhone != null" >
        home_phone,
      </if>
      <if test="companyAddr != null" >
        company_addr,
      </if>
      <if test="companyPostcode != null" >
        company_postcode,
      </if>
      <if test="companyPhone != null" >
        company_phone,
      </if>
      <if test="mobilePhone != null" >
        mobile_phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loanId != null" >
        #{loanId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="relation != null" >
        #{relation,jdbcType=VARCHAR},
      </if>
      <if test="homeAddr != null" >
        #{homeAddr,jdbcType=VARCHAR},
      </if>
      <if test="homePost != null" >
        #{homePost,jdbcType=VARCHAR},
      </if>
      <if test="homePhone != null" >
        #{homePhone,jdbcType=VARCHAR},
      </if>
      <if test="companyAddr != null" >
        #{companyAddr,jdbcType=VARCHAR},
      </if>
      <if test="companyPostcode != null" >
        #{companyPostcode,jdbcType=VARCHAR},
      </if>
      <if test="companyPhone != null" >
        #{companyPhone,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null" >
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ufc.fm.dbio.po.FmLoanContactExample" resultType="java.lang.Integer" >
    select count(*) from fm_loan_contact
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fm_loan_contact
    <set >
      <if test="record.contactId != null" >
        contact_id = #{record.contactId,jdbcType=INTEGER},
      </if>
      <if test="record.loanId != null" >
        loan_id = #{record.loanId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.relation != null" >
        relation = #{record.relation,jdbcType=VARCHAR},
      </if>
      <if test="record.homeAddr != null" >
        home_addr = #{record.homeAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.homePost != null" >
        home_post = #{record.homePost,jdbcType=VARCHAR},
      </if>
      <if test="record.homePhone != null" >
        home_phone = #{record.homePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.companyAddr != null" >
        company_addr = #{record.companyAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.companyPostcode != null" >
        company_postcode = #{record.companyPostcode,jdbcType=VARCHAR},
      </if>
      <if test="record.companyPhone != null" >
        company_phone = #{record.companyPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.mobilePhone != null" >
        mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fm_loan_contact
    set contact_id = #{record.contactId,jdbcType=INTEGER},
      loan_id = #{record.loanId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      relation = #{record.relation,jdbcType=VARCHAR},
      home_addr = #{record.homeAddr,jdbcType=VARCHAR},
      home_post = #{record.homePost,jdbcType=VARCHAR},
      home_phone = #{record.homePhone,jdbcType=VARCHAR},
      company_addr = #{record.companyAddr,jdbcType=VARCHAR},
      company_postcode = #{record.companyPostcode,jdbcType=VARCHAR},
      company_phone = #{record.companyPhone,jdbcType=VARCHAR},
      mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ufc.fm.dbio.po.FmLoanContact" >
    update fm_loan_contact
    <set >
      <if test="loanId != null" >
        loan_id = #{loanId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="relation != null" >
        relation = #{relation,jdbcType=VARCHAR},
      </if>
      <if test="homeAddr != null" >
        home_addr = #{homeAddr,jdbcType=VARCHAR},
      </if>
      <if test="homePost != null" >
        home_post = #{homePost,jdbcType=VARCHAR},
      </if>
      <if test="homePhone != null" >
        home_phone = #{homePhone,jdbcType=VARCHAR},
      </if>
      <if test="companyAddr != null" >
        company_addr = #{companyAddr,jdbcType=VARCHAR},
      </if>
      <if test="companyPostcode != null" >
        company_postcode = #{companyPostcode,jdbcType=VARCHAR},
      </if>
      <if test="companyPhone != null" >
        company_phone = #{companyPhone,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null" >
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      </if>
    </set>
    where contact_id = #{contactId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ufc.fm.dbio.po.FmLoanContact" >
    update fm_loan_contact
    set loan_id = #{loanId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      relation = #{relation,jdbcType=VARCHAR},
      home_addr = #{homeAddr,jdbcType=VARCHAR},
      home_post = #{homePost,jdbcType=VARCHAR},
      home_phone = #{homePhone,jdbcType=VARCHAR},
      company_addr = #{companyAddr,jdbcType=VARCHAR},
      company_postcode = #{companyPostcode,jdbcType=VARCHAR},
      company_phone = #{companyPhone,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR}
    where contact_id = #{contactId,jdbcType=INTEGER}
  </update>
</mapper>